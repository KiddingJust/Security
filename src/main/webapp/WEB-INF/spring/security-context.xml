<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<bean id="LoginHandler" class="org.kidding.security.CustomLoginSuccessHandler">
	</bean>
	
	<security:http>
		<security:intercept-url pattern="/sample/all" access="permitAll" />
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />
		
		<!-- security:intercept-url 에서 설정해준 access 권한이 없으면, uri 접속 시 아래에서 설정해준 곳으로 이동한다. form-login -->
		<security:form-login login-page="/customLogin"
		authentication-success-handler-ref="loginHandler"
		authentication-failure-handler-ref="loginHandler" />
		<!--  <security:form-login />  -->		
		
		<!--<security:access-denied-handler error-page="/accessError" /> -->
		<security:logout logout-url="/customLogout" />
		
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
			<!-- 인증 및 권한에 대한 실제 처리  -->
			<!-- member라는 계정 정보를 가진 사용자가 로그인을 할 수 있도록 하는 것. id 및 pw를 member로 하여 로그인하면 에러가 발생. {noop}을 붙여주어야 함. -->
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
